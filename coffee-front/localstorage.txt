const cart = reactive(JSON.parse(localStorage.getItem("cart") || "{}"));
watch(cart, () => {
    localStorage.setItem("cart", JSON.stringify(cart));
  });

  Вот пример {    "id": 346,    "title": "Цветочные облака",    "description": "Воздушный цветок ароматизированного кофе.",    "category": "vending",    "weights": [      {"value": 10, "price": 1500, "priceCrossed": 1800},      {"value": 18, "price": 2500, "priceCrossed": 3000},      {"value": 25, "price": 3500, "priceCrossed": 4000},      {"value": 30, "price": 4000, "priceCrossed": 4500},      {"value": 33, "price": 4500, "priceCrossed": 5000}    ],    "rate": {"rating": 4.8, "comments": 280},    "actions": ["Скидки", "Популярное"],    "kind": "Гранулированные кофейные напитки"  },

kind принимает значения 'Гранулированный кофе','Гранулированный какао','Гранулированный цикорий','Гранулированные кофейные напитки','Зерновой кофе','Кофе порошкообразный','Сухое молоко гранулированное'category всегда приинимает значение vendingactions принимает два значения из следующих: 'Популярное', 'Новый урожай', 'Ваш выбор','Микролот','Сорт недели','Скидки','Новинка'


  Вот пример {    "id": 346,    "title": "Цветочные облака",    "description": "Воздушный цветок ароматизированного кофе.",    "category": "vending",    "weights": [      {"value": 10, "price": 1500, "priceCrossed": 1800},      {"value": 18, "price": 2500, "priceCrossed": 3000},      {"value": 25, "price": 3500, "priceCrossed": 4000},      {"value": 30, "price": 4000, "priceCrossed": 4500},      {"value": 33, "price": 4500, "priceCrossed": 5000}    ],    "rate": {"rating": 4.8, "comments": 280},    "actions": ["Скидки", "Популярное"],    "kind": "Гранулированные кофейные напитки"  },

kind принимает значения 'Гранулированный кофе','Гранулированный какао','Гранулированный цикорий','Гранулированные кофейные напитки','Зерновой кофе','Кофе порошкообразный','Сухое молоко гранулированное'category всегда приинимает значение actions принимает два значения из следующих: 'Популярное', 'Новый урожай', 'Ваш выбор','Микролот','Сорт недели','Скидки','Новинка'

Сформируй карточки товаров здорового питания. Поля должны быть такими же, только у всех карточек поле category принимает значение healthy, поле weights.value принимает значения 100, 150, 165, 200, 500, 1000, а поле kind принимает одно из значений 'Цикорий и корень цикория','Напитки для здоровья','Ячменные напитки','Протеиновые смеси','Толокняные каши'. Цены тоже должны быть ниже, так как weights.value указано в граммах
id от 801

Сформируй карточки товаров здорового питания. Вот образец:    "id": 843,    "title": "Ячменная сила",    "description": "Сильный антиоксидантный эффект обеспечивает хорошее самочувствие и тонус.",    "category": "healthy",    "weights": [      {"value": 100, "price": 100, "priceCrossed": 120},      {"value": 150, "price": 140, "priceCrossed": 160},      {"value": 165, "price": 150, "priceCrossed": 170},      {"value": 200, "price": 170, "priceCrossed": 190},      {"value": 500, "price": 420, "priceCrossed": 470},      {"value": 1000, "price": 780, "priceCrossed": 830}    ],    "rate": {"rating": 4.6, "comments": 90},    "actions": ["Популярное", "Скидки"],    "kind": "Ячменные напитки"  },

поле kind принимает одно из значений 'Цикорий и корень цикория','Напитки для здоровья','Ячменные напитки','Протеиновые смеси','Толокняные каши'. у всех карточек поле category принимает значение healthy, поле weights.value принимает значения 100, 150, 165, 200, 500, 1000,значение actions принимает два значения из следующих: 'Популярное', 'Новый урожай', 'Ваш выбор','Микролот','Сорт недели','Скидки','Новинка'id от 844

.filter((p) => Object.keys(roastingDegrees).length == 0 || roastingDegrees[p.roasting]).filter((p) => Object.keys(otherDetails.actions).length == 0 || chosenTypes.includes(p.kind))